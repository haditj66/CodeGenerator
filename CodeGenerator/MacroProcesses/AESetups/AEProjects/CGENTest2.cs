//############################################### 
//this is an autogenerated file using cgen's macro2 command. Dont modify this file here unless it is in user sections 
//###############################################

//Macro2 - AERTOS\AEProjectCS.cgenMM::TopLevel


using CgenMin.MacroProcesses;
using CGENTestProject;
using CodeGenerator.MacroProcesses.AESetups;
using CodeGenerator.MacroProcesses.AESetups.SPBs;
using System.Collections.Generic;

namespace CGENTest2Project
{

    public class CGENTest2 : AEProject
    {

        [AEEXETest]
        public void default2()
        {

            AEClock aEClock = new AEClock("clock1", 1000, "clock1_callback");
            AESensor sensor1 = new AESensor("sensor1", SensorResolution.Resolution12Bit, 0, 100);
            AESensor sensor2 = new AESensor("sensor2", SensorResolution.Resolution12Bit, 0, 100);
            AESensor sensor3 = new AESensor("sensor3", SensorResolution.Resolution12Bit);



            AverageSPB averageSPB1 = new AverageSPB("averageSPB1", StyleOfSPB.EachSPBTask, " ", false, new SPBChannelUserDefinedCountBuffer(10));

            aEClock
    .FlowIntoSensor(sensor1, AEClock_PrescalerEnum.PRESCALER1)
    .FlowIntoFilter(new DerivativeFilter())
    .FlowIntoFilter(new DerivativeFilter())
    .FlowIntoSPB(averageSPB1, SPBChannelNum.CH0, LinkTypeEnum.Copy);

            aEClock
                .FlowIntoSensor(sensor2, AEClock_PrescalerEnum.PRESCALER1)
                .FlowIntoFilter(new DerivativeFilter())
                .FlowIntoFilter(new DerivativeFilter());
               // .FlowIntoSPB(averageSPB2, 0, LinkTypeEnum.Copy);
            aEClock
                .FlowIntoSensor(sensor3, AEClock_PrescalerEnum.PRESCALER1)
                .FlowIntoFilter(new DerivativeFilter())
                .FlowIntoFilter(new DerivativeFilter());
                //.FlowIntoSPB(averageSPB3, 0, LinkTypeEnum.Copy);

        }

        protected override string _GetDirectoryOfLibrary()
        {
            return @"C:/CodeGenerator/CodeGenerator/macro2Test/CGENTest2";
        }

        protected override List<AEEvent> _GetEventsInLibrary()
        {
            return new List<AEEvent>() { I2C_RXCpltEVT.Init(10) };
        }


        protected override List<AEProject> _GetLibrariesIDependOn()
        {
            return new List<AEProject>() {(AEProject) new CGENTest()};
        }
        protected override List<AEHal> _GetPeripheralsInLibrary()
        {
            return null;
        }

        protected override List<string> _GetAnyAdditionalIncludeDirs()
        {
            return new List<string>() { };
        }

        protected override List<string> _GetAnyAdditionalSRCDirs()
        {
            return new List<string>() { };
        }

    }
}