

#include "AEUtilityAsService.h" 

#include "AEPublishSubscribeManager.h" 

#include "ActionRequestObjectArgTDU.h"
 
#include "AE_TDUAsService.h" 

#include "@UtilityName@_ServiceGen.h"


##UserCode_header

class @UtilityName@ :   
	 public AEService< @BaseTemplate@ >
{
public: 

	##UserCode_public
	 
	@UtilityName@ ()
	{ 
		@Service1NameDef@ //ActionReq1.ServiceName = "Transmit";
		@Service2NameDef@
		@Service3NameDef@
		@Service4NameDef@
		@Service5NameDef@
		@Service6NameDef@ 
		 
		@UtilityName@_CTOR
		
		##UserCode_ctor
		 	
	}
	@UtilityName@_Service
	
protected: 
	
	##UserCode_prot
	
	
	//example for waiting on an event
	//actReq->WaitForEvent<SomeOther_Sig>(
	//				[](void* s, AEEventDiscriminator_t* evt)->void {
	//					//SomeOther_Sig* sssc = (SomeOther_Sig*)evt->evt;
	//					AEPrint("Event SomeOther_Sig recieved"); 
	//					return;
	//				}
	//				, 500);
	
	//dont forget to return the service value when finished
	//actReq->SetReturnArg(1); 
	
	//return true in the update function for tdus when the service is done.
	
	//=====================================
	//Normal services
	//=====================================
	@Service1Func@  
	@Service2Func@  
	@Service3Func@  
	
	
	//=====================================
	//TDU services
	//=====================================
	@Service4Func@  
	@Service5Func@  
	@Service6Func@  
	 
	  

};




##UserCode_func