##Macro1 
 ##LoopIncrement1 
 ##ToFile C:/AERTOSProjects/blinky\defaultTest.cpp 
//############################################### 
//this is an autogenerated file using cgen's macro2 command. Dont modify this file here unless it is in user sections 
//###############################################


 
#if INTEGRATION_TESTS_FOR_blinky__defaultTest
 
#include "IntegTestPipeline.h"


#include "AECore.h"
#include "AE_Init.h" 
#include "AEClock.h" 
#include "AEObjects.h" 

DECLARE_ALL_AO_PTR

static void clock1_callback(TimerHandle_t xTimerHandle);
static int16_t sineSensor_data[1];
static int16_t sengpioSensorsor2_data[1];




##UserCode_a

void RunSelectedIntegrationTest_defaultTest()
{

AE_Init();
 ##UserCode_beforemain









static AEClock<AEObservorSensor, AEObservorInterpretorBaseDUMMY, 1, 0, 0, 0, 0, 0,1, 0, 0,0, 0, 0,0, 0, 0,0, 0, 0,0, 0, 0> clock1L(1000, clock1_callback);
clock1 = &clock1L;

static AEObservorSensorFilterOut<> sineSensorL((int16_t*) sineSensor_data, SensorResolution::Resolution16Bit  );
sineSensor = &sineSensorL;

static AEObservorSensorFilterOut<> sengpioSensorsor2L((int16_t*) sengpioSensorsor2_data, SensorResolution::Resolution16Bit  );
sengpioSensorsor2 = &sengpioSensorsor2L;

static AverageSPB< false,  4> averageSPBL; averageSPBL.InitSPBObserver(StyleOfSPB::EachSPBTask); 
averageSPB = &averageSPBL;

static IfRightOnSPB< false> ifRightOnSPBL; ifRightOnSPBL.InitSPBObserver(StyleOfSPB::EachSPBTask); 
ifRightOnSPB = &ifRightOnSPBL;

static PWMDriverU pWMDriverU_L; pWMDriverU_L.Init(AEPriorities::MediumPriority);
pWMDriverU = &pWMDriverU_L;




##UserCode_beforelinks
static float averageSPBchBuffer1[4];
averageSPB->AddSignalFlowLinkToChannelWithCopy1(sineSensor, averageSPBchBuffer1, 0);
static float ifRightOnSPBchBuffer1[1];
ifRightOnSPB->AddSignalFlowLinkToChannelWithCopy1(averageSPB, ifRightOnSPBchBuffer1, 0);
static float ifRightOnSPBchBuffer2[1];
ifRightOnSPB->AddSignalFlowLinkToChannelWithCopy2(sengpioSensorsor2, ifRightOnSPBchBuffer2, 0);
pWMDriverU->SetToSPBTick(ifRightOnSPB, 0);



##UserCode_beforeclock
clock1->SetObservorToClock(sineSensor, AEClock_PrescalerEnum::PRESCALER1);
clock1->SetObservorToClock(sengpioSensorsor2, AEClock_PrescalerEnum::PRESCALER4);


//AEITEST_END_TestsAfterTimer_blinky(5000);
##UserCode_b

AEAO::ConfigureAndStart();
}


##UserCode_c


static void clock1_callback(TimerHandle_t xTimerHandle) {  
  ##UserCode_clock1before 
  
 clock1->Tick(); 
  ##UserCode_clock1after 
}


#endif