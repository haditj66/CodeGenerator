##Macro1 
 ##LoopIncrement1 
 ##ToFile C:/AERTOSProjects/commonHalAOs\include\DataToPC1_SPB.h 
//############################################### 
//this is an autogenerated file using cgen's macro2 command. Dont modify this file here unless it is in user sections 
//###############################################

#pragma once


#include "AESPBObservorOutputType.h"
#include "AEUtils.h"
#include "FreeRTOS.h"
#include "AEFilter.h"

#include "AEIntegrationTesting.h"

##UserCode_header

template<bool isSubscribable, uint32_t CHANNELCOUNTBUFFER1, TEMPLATESPB_Filters>
	class DataToPC1_SPB :
		public AESPBObservorOutputType <1, 1, isSubscribable,
TEMPLATESPB_FilterParams,
CHANNELCOUNTBUFFER1, false>
	{
	public:
		DataToPC1_SPB();
		
		##UserCode_public


	protected: UploadDataToPcU* uploadDataUToUse; 
public: UploadDataToPcU*  GetuploadDataUToUse()   const {return uploadDataUToUse; }


public: void UserInitialize(UploadDataToPcU* _uploadDataUToUse )
	{
		uploadDataUToUse =  _uploadDataUToUse;

		
		##UserCode_userInited
		
		userInitialized = true;
	}
private: bool userInitialized = false;
protected: void CheckIfConfiguredProperly() const override  
	{
		//DataToPC1_SPB::CheckIfConfiguredProperly();
		if (userInitialized == false)
		{
			// you did not initialize one of your AEobjects
			AEAssertRuntime(userInitialized == true, "user did not call the UserInitailize function for  DataToPC1_SPB"); 
		} 
		 
	}
	
	private:
	##UserCode_private

		void RefreshOVERRIDE(float OutputSignal[1]) override;

	};


##UserCode_func


template<bool isSubscribable, uint32_t CHANNELCOUNTBUFFER1, TEMPLATESPB_FiltersFunctionParams>
	inline DataToPC1_SPB< isSubscribable,  CHANNELCOUNTBUFFER1, TEMPLATESPB_FilterParams>::DataToPC1_SPB()
	{
		##UserCode_ctor
	}

template<bool isSubscribable, uint32_t CHANNELCOUNTBUFFER1, TEMPLATESPB_FiltersFunctionParams>
	inline void DataToPC1_SPB< isSubscribable,  CHANNELCOUNTBUFFER1, TEMPLATESPB_FilterParams>::RefreshOVERRIDE(float OutputSignal[1])
	{

		float* ch1 = this->InputChannels[0]->ChannelSignalBufferSingle; 

 
		##UserCode_refresh
	}

