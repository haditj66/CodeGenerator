##Macro1 
 ##LoopIncrement1 
 ##ToFile C:/Users/hadi/Documents/AERTOSProjects/commonAOs\include\HighOrLowFilter.h 
//############################################### 
//this is an autogenerated file using cgen's macro2 command. Dont modify this file here unless it is in user sections 
//###############################################

#pragma once 

#include <cstdint>
#include "AEFilter.h"


##UserCode_header

template<int32_t _ThresholdOfAHigh , int32_t _countsToHighOrLow >
class HighOrLowFilter //: public Filter<HighOrLowFilter< _ThresholdOfAHigh ,  _countsToHighOrLow >, 1>
{
  template<class TFilterDerived, uint16_t PastDataBufferSize>
	friend class Filter;

public:

##UserCode_publ

	HighOrLowFilter();

protected:

##UserCode_prot
	
	void InitializeImpl(float samplingPeriodOfObservorInSeconds);

	const float*  PastDataCircularBuffer;
	float SamplingPeriodOfObservorInSeconds;
	uint16_t PastDataBufferSize;

private:
	float RunFilter(float newestInput);
	
	##UserCode_priv
	

};

template<int32_t _ThresholdOfAHigh , int32_t _countsToHighOrLow >
inline HighOrLowFilter< _ThresholdOfAHigh ,  _countsToHighOrLow >::HighOrLowFilter()
{
	##UserCode_ctor
}
 
template<int32_t _ThresholdOfAHigh , int32_t _countsToHighOrLow >
inline void HighOrLowFilter< _ThresholdOfAHigh ,  _countsToHighOrLow >::InitializeImpl(float samplingPeriodOfObservorInSeconds)
{
	##UserCode_init
}

template<int32_t _ThresholdOfAHigh , int32_t _countsToHighOrLow >
inline float HighOrLowFilter< _ThresholdOfAHigh ,  _countsToHighOrLow >::RunFilter(float newestInput)
{
//PastDataCircularBuffer[0] is the newest input
//example: float der = (PastDataCircularBuffer[0] - PastDataCircularBuffer[1]) / this->SamplingPeriodOfObservorInSeconds;
//return the output of the filter
//return der;

##UserCode_impl
 
}


##UserCode_func