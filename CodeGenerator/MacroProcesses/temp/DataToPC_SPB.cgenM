##Macro1 
 ##LoopIncrement1 
 ##ToFile C:/AERTOSProjects/commonHalAOs\include\DataToPC_SPB.h 
//############################################### 
//this is an autogenerated file using cgen's macro2 command. Dont modify this file here unless it is in user sections 
//###############################################

#pragma once


#include "AESPBObservorOutputType.h"
#include "AEUtils.h"
#include "FreeRTOS.h"
#include "AEFilter.h"

#include "AEIntegrationTesting.h"

##UserCode_header

template< uint16_t NUMOFINPUTSIGNALS, bool isSubscribable, uint32_t CHANNELCOUNTBUFFER, TEMPLATESPB_Filters>
	class DataToPC_SPB :
		public AESPBObservorOutputType <1, NUMOFINPUTSIGNALS, isSubscribable,
TEMPLATESPB_FilterParams,
CHANNELCOUNTBUFFER, false,
CHANNELCOUNTBUFFER, false,
CHANNELCOUNTBUFFER, false,
CHANNELCOUNTBUFFER, false,
CHANNELCOUNTBUFFER, false,
CHANNELCOUNTBUFFER, false,
CHANNELCOUNTBUFFER, false,
CHANNELCOUNTBUFFER, false,
CHANNELCOUNTBUFFER, false,
CHANNELCOUNTBUFFER, false,
CHANNELCOUNTBUFFER, false,
CHANNELCOUNTBUFFER, false>
	{
	public:
		DataToPC_SPB();
		
		##UserCode_public


	
	
	private:
	##UserCode_private

		void RefreshOVERRIDE(float OutputSignal[1]) override;

	};


##UserCode_func


template< uint16_t NUMOFINPUTSIGNALS, bool isSubscribable, uint32_t CHANNELCOUNTBUFFER, TEMPLATESPB_FiltersFunctionParams>
	inline DataToPC_SPB<  NUMOFINPUTSIGNALS,  isSubscribable,  CHANNELCOUNTBUFFER, TEMPLATESPB_FilterParams>::DataToPC_SPB()
	{
		##UserCode_ctor
	}

template< uint16_t NUMOFINPUTSIGNALS, bool isSubscribable, uint32_t CHANNELCOUNTBUFFER, TEMPLATESPB_FiltersFunctionParams>
	inline void DataToPC_SPB<  NUMOFINPUTSIGNALS,  isSubscribable,  CHANNELCOUNTBUFFER, TEMPLATESPB_FilterParams>::RefreshOVERRIDE(float OutputSignal[1])
	{

		float* AllChannels[NUMOFINPUTSIGNALS]; 
       for (int i = 0; i < NUMOFINPUTSIGNALS; i++) 
        {        
           AllChannels[i] = this->InputChannels[i]->ChannelSignalBufferSingle; 
        }       

 
		##UserCode_refresh
	}

