##Macro1 
 ##LoopIncrement1 
 ##ToFile C:/AERTOSProjects/commonHalAOs\datauploadTest.cpp 
//############################################### 
//this is an autogenerated file using cgen's macro2 command. Dont modify this file here unless it is in user sections 
//###############################################


 
#if INTEGRATION_TESTS_FOR_commonHalAOs__datauploadTest
 
#include "IntegTestPipeline.h"


#include "AECore.h"
#include "AE_Init.h" 
#include "AEClock.h" 
#include "AEObjects.h" 

DECLARE_ALL_AO_PTR

static void clocl1_callback(TimerHandle_t xTimerHandle);
static void clocl2_callback(TimerHandle_t xTimerHandle);
static int16_t aESensor1_data[1];
static int16_t aESensor2_data[1];
static int16_t aESensor3_data[1];




##UserCode_a

void RunSelectedIntegrationTest_datauploadTest()
{

AE_Init();
 ##UserCode_beforemain












static AEClock<AEObservorSensor, AEObservorInterpretorBaseDUMMY, 0, 0, 0, 1, 0, 0,0, 0, 0,0, 0, 0,0, 0, 0,0, 0, 0,2, 0, 0> clocl1L(100, clocl1_callback);
clocl1 = &clocl1L;

static AEClock<AEObservorSensorDUMMY, AEObservorInterpretorBaseDUMMY, 0, 0, 1, 0, 0, 0,0, 0, 0,0, 0, 0,0, 0, 0,0, 0, 0,0, 0, 0> clocl2L(1000, clocl2_callback);
clocl2 = &clocl2L;

static UploadDataToPcU uploadDataToPcU_L; uploadDataToPcU_L.Init(AEPriorities::MediumPriority);
uploadDataToPcU = &uploadDataToPcU_L;




static DataToPC3_SPB< false,  1,  32,  1> dataToPC_SPBL; dataToPC_SPBL.InitSPBObserver(StyleOfSPB::EachSPBTask); 
dataToPC_SPB = &dataToPC_SPBL;

static AEObservorSensorFilterOut<> aESensor1L((int16_t*) aESensor1_data, SensorResolution::Resolution16Bit  );
aESensor1 = &aESensor1L;

static AEObservorSensorFilterOut<> aESensor2L((int16_t*) aESensor2_data, SensorResolution::Resolution16Bit  );
aESensor2 = &aESensor2L;

static AEObservorSensorFilterOut<> aESensor3L((int16_t*) aESensor3_data, SensorResolution::Resolution16Bit  );
aESensor3 = &aESensor3L;



##UserCode_beforelinks
static float dataToPC_SPBchBuffer1[1];
dataToPC_SPB->AddSignalFlowLinkToChannelWithCopy1(aESensor1, dataToPC_SPBchBuffer1, 0);
static float dataToPC_SPBchBuffer2[32];
dataToPC_SPB->AddSignalFlowLinkToChannelWithCopy2(aESensor2, dataToPC_SPBchBuffer2, 0);
static float dataToPC_SPBchBuffer3[1];
dataToPC_SPB->AddSignalFlowLinkToChannelWithCopy3(aESensor3, dataToPC_SPBchBuffer3, 0);



##UserCode_beforeclock
clocl1->SetObservorToClock(aESensor1, AEClock_PrescalerEnum::PRESCALER64);
clocl1->SetObservorToClock(aESensor2, AEClock_PrescalerEnum::PRESCALER2);
clocl1->SetObservorToClock(aESensor3, AEClock_PrescalerEnum::PRESCALER64);
clocl2->SetTDUToClock(uploadDataToPcU, AEClock_PrescalerEnum::PRESCALER1);


//AEITEST_END_TestsAfterTimer_commonHalAOs(5000);
##UserCode_b

AEAO::ConfigureAndStart();
}


##UserCode_c


static void clocl1_callback(TimerHandle_t xTimerHandle) {  
  ##UserCode_clocl1before 
  
 clocl1->Tick(); 
  ##UserCode_clocl1after 
}static void clocl2_callback(TimerHandle_t xTimerHandle) {  
  ##UserCode_clocl2before 
  
 clocl2->Tick(); 
  ##UserCode_clocl2after 
}


#endif